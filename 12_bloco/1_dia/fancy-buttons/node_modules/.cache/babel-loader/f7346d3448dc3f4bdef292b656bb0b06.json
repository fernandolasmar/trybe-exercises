{"ast":null,"code":"var _jsxFileName = \"/home/fernando/trybe-exercises/12_bloco/1_dia/fancy-buttons/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    /* Para definir um estado inicial ao componente, a ser definido\n    no momento em que o componente for colocado na tela, faça uma atribuição\n    de um objeto à chave `state` do `this`, ou seja, ao `this.state`*/\n\n    this.btn1 = this.btn1.bind(this); // para fazer a conexao com o this dentro do render, senão ele não enxerga o this\n\n    this.btn2 = this.btn2.bind(this);\n    this.btn3 = this.btn3.bind(this);\n    this.state = {\n      clickBtn1: 0,\n      clickBtn2: 0,\n      clickBtn3: 0\n    }; // console.log('Constructor teste')\n  }\n\n  btn1() {\n    /* Você **NUNCA** deve fazer atribuições diretamente a `this.state`. Deve,\n    ao invés disso, SEMPRE utilizar a função `this.setState(novoEstado)` do\n    React*/\n    this.setState((estadoAnterior, _props) => ({\n      clickBtn1: estadoAnterior.clickBtn1 + 1\n    })); // console.log('Clicou no botão 1');\n  }\n\n  btn2() {\n    this.setState((estadoAnterior, _props) => ({\n      clickBtn2: estadoAnterior.clickBtn2 + 1\n    }));\n  }\n\n  btn3() {\n    this.setState((estadoAnterior, _props) => ({\n      clickBtn3: estadoAnterior.clickBtn3 + 1\n    }));\n  }\n\n  render() {\n    // console.log(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.btn1,\n        children: [\"Bot\\xE3o 1 quantidade de clicks = \", this.state.clickBtn1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.btn2,\n        children: [\"Bot\\xE3o 2 quantidade de clicks = \", this.state.clickBtn2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.btn3,\n        children: [\"Bot\\xE3o 3 quantidade de clicks = \", this.state.clickBtn3]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;\n/*\n  Para criar so os botoes, sem contagem\n    import React from 'react';\n\n    class App extends React.Component {\n      constructor() {\n        super();\n\n        this.handleButtonOne = this.handleButtonOne.bind(this);\n        this.handleButtonTwo = this.handleButtonTwo.bind(this);\n        this.handleButtonThree = this.handleButtonThree.bind(this);\n\n        this.state = {\n          clicksBtnOne: 0,\n          clicksBtnTwo: 0,\n          clicksBtnThree: 0,\n        };\n      }\n\n      handleButtonOne() {\n        this.setState(() => ({\n          clicksBtnOne: 1,\n        }));\n      }\n      \n      handleButtonTwo() {\n        this.setState(() => ({\n          clicksBtnTwo: 1,\n        }));\n      }\n      \n      handleButtonThree() {\n        this.setState(() => ({\n          clicksBtnThree: 1,\n        }));\n      }\n     \n       render() {\n        return (\n          <div>\n            <button onClick={ this.handleButtonOne }>Botão 1</button>\n            <button onClick={ this.handleButtonTwo }>Botão 2</button>\n            <button onClick={ this.handleButtonThree }>Botão 3</button>\n          </div>\n        );\n      }\n    }\n\n    export default App;\n    */","map":{"version":3,"sources":["/home/fernando/trybe-exercises/12_bloco/1_dia/fancy-buttons/src/App.js"],"names":["React","App","Component","constructor","btn1","bind","btn2","btn3","state","clickBtn1","clickBtn2","clickBtn3","setState","estadoAnterior","_props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA;AACJ;AACA;;AACI,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ,CALY,CAKuB;;AACnC,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUD,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKE,IAAL,GAAY,KAAKA,IAAL,CAAUF,IAAV,CAAe,IAAf,CAAZ;AAEA,SAAKG,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CADA;AAEXC,MAAAA,SAAS,EAAE,CAFA;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb,CATY,CAcZ;AACD;;AAEDP,EAAAA,IAAI,GAAG;AACJ;AACL;AACA;AACI,SAAKQ,QAAL,CAAc,CAACC,cAAD,EAAiBC,MAAjB,MAA6B;AACzCL,MAAAA,SAAS,EAAEI,cAAc,CAACJ,SAAf,GAA2B;AADG,KAA7B,CAAd,EAJK,CAOL;AACD;;AAEDH,EAAAA,IAAI,GAAG;AACL,SAAKM,QAAL,CAAc,CAACC,cAAD,EAAiBC,MAAjB,MAA6B;AACzCJ,MAAAA,SAAS,EAAEG,cAAc,CAACH,SAAf,GAA2B;AADG,KAA7B,CAAd;AAGD;;AAEDH,EAAAA,IAAI,GAAG;AACL,SAAKK,QAAL,CAAc,CAACC,cAAD,EAAiBC,MAAjB,MAA6B;AACzCH,MAAAA,SAAS,EAAEE,cAAc,CAACF,SAAf,GAA2B;AADG,KAA7B,CAAd;AAGD;;AAGDI,EAAAA,MAAM,GAAG;AACP;AACA,wBACA;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKX,IAAtB;AAAA,yDAA4D,KAAKI,KAAL,CAAWC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKH,IAAtB;AAAA,yDAA4D,KAAKE,KAAL,CAAWE,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKH,IAAtB;AAAA,yDAA4D,KAAKC,KAAL,CAAWG,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAOD;;AAlD+B;;AAqDlC,eAAeV,GAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    /* Para definir um estado inicial ao componente, a ser definido\n    no momento em que o componente for colocado na tela, faça uma atribuição\n    de um objeto à chave `state` do `this`, ou seja, ao `this.state`*/\n    this.btn1 = this.btn1.bind(this);  // para fazer a conexao com o this dentro do render, senão ele não enxerga o this\n    this.btn2 = this.btn2.bind(this);\n    this.btn3 = this.btn3.bind(this);\n\n    this.state = {\n      clickBtn1: 0,\n      clickBtn2: 0,\n      clickBtn3: 0,\n    };\n    // console.log('Constructor teste')\n  }\n\n  btn1() {\n     /* Você **NUNCA** deve fazer atribuições diretamente a `this.state`. Deve,\n    ao invés disso, SEMPRE utilizar a função `this.setState(novoEstado)` do\n    React*/\n    this.setState((estadoAnterior, _props) => ({\n      clickBtn1: estadoAnterior.clickBtn1 + 1,\n    }));\n    // console.log('Clicou no botão 1');\n  }\n\n  btn2() {\n    this.setState((estadoAnterior, _props) => ({\n      clickBtn2: estadoAnterior.clickBtn2 + 1,\n    }));\n  }\n\n  btn3() {\n    this.setState((estadoAnterior, _props) => ({\n      clickBtn3: estadoAnterior.clickBtn3 + 1,\n    }));\n  }\n  \n\n  render() {\n    // console.log(this);\n    return (\n    <div>\n      <button onClick={this.btn1}>Botão 1 quantidade de clicks = {this.state.clickBtn1}</button>\n      <button onClick={this.btn2}>Botão 2 quantidade de clicks = {this.state.clickBtn2}</button>\n      <button onClick={this.btn3}>Botão 3 quantidade de clicks = {this.state.clickBtn3}</button>\n    </div>\n    )\n  }    \n}\n\nexport default App;\n\n\n/*\n  Para criar so os botoes, sem contagem\n    import React from 'react';\n\n    class App extends React.Component {\n      constructor() {\n        super();\n\n        this.handleButtonOne = this.handleButtonOne.bind(this);\n        this.handleButtonTwo = this.handleButtonTwo.bind(this);\n        this.handleButtonThree = this.handleButtonThree.bind(this);\n\n        this.state = {\n          clicksBtnOne: 0,\n          clicksBtnTwo: 0,\n          clicksBtnThree: 0,\n        };\n      }\n\n      handleButtonOne() {\n        this.setState(() => ({\n          clicksBtnOne: 1,\n        }));\n      }\n      \n      handleButtonTwo() {\n        this.setState(() => ({\n          clicksBtnTwo: 1,\n        }));\n      }\n      \n      handleButtonThree() {\n        this.setState(() => ({\n          clicksBtnThree: 1,\n        }));\n      }\n     \n       render() {\n        return (\n          <div>\n            <button onClick={ this.handleButtonOne }>Botão 1</button>\n            <button onClick={ this.handleButtonTwo }>Botão 2</button>\n            <button onClick={ this.handleButtonThree }>Botão 3</button>\n          </div>\n        );\n      }\n    }\n\n    export default App;\n    */"]},"metadata":{},"sourceType":"module"}